{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-log/app-log.service.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/codeeditor/codeeditor.component.css","./src/app/codeeditor/codeeditor.component.html","./src/app/codeeditor/codeeditor.component.ts","./src/app/grid/grid.component.css","./src/app/grid/grid.component.html","./src/app/grid/grid.component.ts","./src/app/service/grid-data.service.ts","./src/app/service/window-reference.service.ts","./src/app/shared/model/comparison-tree.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable()\r\nexport class AppLogService {\r\n\r\n  private messages: string[] = [];\r\n\r\n  /**\r\n   * Get the entire data in the heirarchical format\r\n   * @param message - Message to be logged\r\n   * @param entryType - Can be one of the following: Warn: Log as warning; Error: Log as error; Info: Log as info. Defaults to info\r\n   */\r\n  add(message: string, entryType: string) {\r\n    this.messages.push(message);\r\n\r\n    if (!environment.production) {\r\n      entryType = entryType ? entryType.toLowerCase() : '';\r\n\r\n      switch (entryType) {\r\n        case 'warn':\r\n          console.warn(message);\r\n          break;\r\n        case 'error':\r\n          console.error(message);\r\n          break;\r\n        case 'info':\r\n        default:\r\n          console.log(message);\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear the message log\r\n   */\r\n  clear() {\r\n    this.messages = [];\r\n    if (!environment.production) {\r\n      console.clear();\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-log/app-log.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<app-grid></app-grid>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { GridComponent } from './grid/grid.component';\r\nimport { GridDataService } from './service/grid-data.service';\r\nimport { AppLogService } from './app-log/app-log.service';\r\nimport { CodeeditorComponent } from './codeeditor/codeeditor.component';\r\nimport { WindowReferenceService } from './service/window-reference.service';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        GridComponent,\r\n        CodeeditorComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        FormsModule\r\n    ],\r\n    providers: [\r\n        GridDataService,\r\n        AppLogService\r\n        , WindowReferenceService\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"#code-editor-container {\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n#code-editor-section{\\r\\n  margin-top:20px;\\r\\n  height: 200px;\\r\\n  border: 1px solid rgba(112, 112, 112, 0.64);\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/codeeditor/codeeditor.component.css\n// module id = ./src/app/codeeditor/codeeditor.component.css\n// module chunks = main","module.exports = \"<div id=\\\"code-editor-section\\\">\\r\\n  <div id=\\\"code-editor-container\\\">\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/codeeditor/codeeditor.component.html\n// module id = ./src/app/codeeditor/codeeditor.component.html\n// module chunks = main","import { Component, OnInit, Input, OnChanges } from '@angular/core';\r\nimport * as monaco from 'monaco-editor';\r\nimport { ComparisonTree } from '../shared/model/comparison-tree';\r\n\r\n@Component({\r\n  selector: 'app-codeeditor',\r\n  templateUrl: './codeeditor.component.html',\r\n  styleUrls: ['./codeeditor.component.css']\r\n})\r\n\r\nexport class CodeeditorComponent implements OnChanges {\r\n\r\n  @Input() comparisonData: ComparisonTree;\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges(changes) {\r\n    this.embedEditor();\r\n  }\r\n\r\n  /**\r\n   * Embed the diff editor below the grid\r\n   */\r\n  embedEditor(): void {\r\n    if (!this.comparisonData) {\r\n      return;\r\n    }\r\n    const sourceDataModel = monaco.editor.createModel(this.comparisonData.SourceObjectDefinition, 'json');\r\n    const targetDataModel = monaco.editor.createModel(this.comparisonData.TargetObjectDefinition, 'json');\r\n\r\n    // if the container already contains an editor, remove it\r\n    const codeEditorContainer = document.getElementById('code-editor-container');\r\n    if (codeEditorContainer.firstChild) {\r\n      codeEditorContainer.removeChild(codeEditorContainer.firstChild);\r\n    }\r\n\r\n    const diffEditor = monaco.editor.createDiffEditor(codeEditorContainer);\r\n    diffEditor.setModel({\r\n      original: sourceDataModel,\r\n      modified: targetDataModel\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/codeeditor/codeeditor.component.ts","module.exports = \"#comparison-table-container{\\r\\n    height: 650px;\\r\\n    overflow-y: auto;\\r\\n}\\r\\n\\r\\n.comparison-grid {\\r\\n    border: 1px solid rgba(112, 112, 112, 0.64);\\r\\n    margin: 10px;\\r\\n    border-collapse: collapse;\\r\\n  \\r\\n}\\r\\n\\r\\n.grid-column {\\r\\n    padding: 1px;\\r\\n    border: 1px solid rgba(112, 112, 112, 0.64);\\r\\n    max-width:300px;\\r\\n    text-overflow:ellipsis;\\r\\n    overflow: hidden;\\r\\n    white-space:nowrap;\\r\\n}\\r\\n\\r\\n.grid-row {\\r\\n    cursor: pointer;\\r\\n    font-weight: 600;\\r\\n    font-size: 12px;\\r\\n    font-family: 'Segoe UI';\\r\\n    font-color:#000;\\r\\n    height: 10px;\\r\\n}\\r\\n\\r\\n.hide-row {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.greyed-out-cell {\\r\\n    background-color: rgba(112, 112, 112, 0.37);\\r\\n}\\r\\n\\r\\n.action-dropdown {\\r\\n    width: 75px;\\r\\n    font-size: 12px;\\r\\n    font-weight: 600;\\r\\n    font-family: 'Segoe UI';\\r\\n    font-color: #000;\\r\\n    position: relative;\\r\\n    top: 1px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.node-images {\\r\\n    height: 15px;\\r\\n    width: 15px;\\r\\n}\\r\\n\\r\\n.node-type {\\r\\n    position: relative;\\r\\n    top: -3px;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/grid/grid.component.css\n// module id = ./src/app/grid/grid.component.css\n// module chunks = main","module.exports = \"<div id='comparison-table-container'>\\r\\n<table class='comparison-grid'>\\r\\n    <tr id='header-row' class='grid-row'>\\r\\n        <td class='grid-column node-type-column'>Type</td>\\r\\n        <td class='grid-column source-name-column'>Source Name</td>\\r\\n        <td class='grid-column status-column'>Status</td>\\r\\n        <td class='grid-column target-name-column'>Target Name</td>\\r\\n        <td class='grid-column action-icon-column'></td>\\r\\n        <td class='grid-column grid-column action-options'>Action</td>\\r\\n\\r\\n    </tr>\\r\\n    <tr *ngFor='let dataObject of comparisonDataToDisplay' class='grid-row object-level-{{dataObject.Level}}' [class.hide-row]='!dataObject.ShowNode'>\\r\\n        <td class='grid-column node-type-column' [style.padding-left]='getIndentLevel(dataObject.Level)' (click)='onSelect(dataObject)'>\\r\\n            <span>\\r\\n                <img [src]='getImage(dataObject,1)' class='node-images' />\\r\\n            </span>\\r\\n            <span class='node-type'>{{dataObject.NodeType}}</span>\\r\\n        </td>\\r\\n        <td class='grid-column source-name-column' [style.padding-left]='getIndentLevel(dataObject.Level)' (click)='onSelect(dataObject)' [class.greyed-out-cell]='!dataObject.SourceName'>{{dataObject.SourceName}}</td>\\r\\n        <td class='grid-column status-column' (click)='onSelect(dataObject)'>{{dataObject.Status}}</td>\\r\\n        <td class='grid-column target-name-column' [style.padding-left]='getIndentLevel(dataObject.Level)' (click)='onSelect(dataObject)' [class.greyed-out-cell]='!dataObject.TargetName'>{{dataObject.TargetName}}</td>\\r\\n        <td class='grid-column action-icon-column'(click)='onSelect(dataObject)'>\\r\\n            <span>\\r\\n                <img [src]='getImage(dataObject,2)' class='node-images' />\\r\\n            </span>\\r\\n        </td>\\r\\n        <td class='grid-column action-options'>\\r\\n            <select class='action-dropdown' (change)='optionChange(dataObject.Id, $event.target.value)' [disabled]=\\\"dataObject.Status == 'Same Definition' ? true : null\\\">\\r\\n                <option *ngFor='let option of dataObject.AvailableActions' [selected]='option == dataObject.MergeAction ? true : null'>{{option}}</option>\\r\\n            </select>\\r\\n        </td>\\r\\n\\r\\n    </tr>\\r\\n</table>\\r\\n</div>\\r\\n<app-codeeditor [comparisonData]=\\\"selectedObject\\\"></app-codeeditor>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/grid/grid.component.html\n// module id = ./src/app/grid/grid.component.html\n// module chunks = main","import { Component, OnInit, NgZone } from '@angular/core';\r\nimport { GridDataService } from '../service/grid-data.service';\r\nimport { ComparisonTree } from '../shared/model/comparison-tree';\r\nimport { CodeeditorComponent as codeeditor } from '../codeeditor/codeeditor.component';\r\nimport { AppLogService } from '../app-log/app-log.service';\r\n\r\n@Component({\r\n  selector: 'app-grid',\r\n  templateUrl: './grid.component.html',\r\n  styleUrls: ['./grid.component.css']\r\n})\r\nexport class GridComponent implements OnInit {\r\n\r\n  comparisonDataToDisplay: ComparisonTree[] = [];\r\n  selectedObject: ComparisonTree;\r\n\r\n  constructor(private gridService: GridDataService, private appLog: AppLogService, private zone: NgZone) {\r\n    window['angularComponentRef'] = {\r\n      zone: this.zone,\r\n      showTree: () => this.getDataToDisplay(),\r\n      getTree: () => this.getGridData()\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getDataToDisplay();\r\n  }\r\n\r\n  /**\r\n    * Handle selection for each row on comparison tree\r\n    * @param objectSelected - Clicked node on comparison tree\r\n    */\r\n  onSelect(objectSelected: ComparisonTree): void {\r\n    this.appLog.add('Grid: Row selected', 'info');\r\n    this.selectedObject = objectSelected;\r\n  }\r\n\r\n  /**\r\n   * Handle the change of option in drop-down\r\n   * @param id - Id of the node changed\r\n   * @param option - New selected options\r\n   */\r\n  optionChange(id: number, option: string) {\r\n    let oldOption: string;\r\n    oldOption = this.comparisonDataToDisplay.find(node => node.Id === id).MergeAction;\r\n    this.comparisonDataToDisplay.find(node => node.Id === id).MergeAction = option;\r\n    this.gridService.sendChange(id, option, oldOption);\r\n  }\r\n\r\n  /**\r\n   * Return the image location as per the node type or the action selected\r\n   * @param imageType - Node type or the Action selected\r\n   * @param type - type based on if it is node icon or selected action\r\n   */\r\n  getImage(nodeData: ComparisonTree, type: number) {\r\n    let roleImageLocation: string;\r\n    if (type === 1) {\r\n      roleImageLocation = './assets/node-type-' + nodeData.NodeType.replace(' ', '-') + '.png';\r\n    } else if (type === 2) {\r\n      if ( nodeData.Status.toLowerCase() === 'same definition' ) {\r\n            roleImageLocation = './assets/action-Skip-Grey.png';\r\n      } else {\r\n        roleImageLocation = './assets/action-' + nodeData.MergeAction.replace(' ', '-') + '.png';\r\n      }\r\n    }\r\n    return roleImageLocation;\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns the style to be used to indent the row\r\n   * @param nodeLevel - Level of the node\r\n   */\r\n  getIndentLevel(nodeLevel: number): string {\r\n    const indentValue = nodeLevel * 20 + 5;\r\n    return indentValue + 'px';\r\n  }\r\n\r\n  /**\r\n   * Get the data to be displayed from service\r\n   */\r\n  getDataToDisplay(): void {\r\n    this.appLog.add('Grid: Get users called', 'info');\r\n    this.gridService.getGridDataToDisplay().subscribe(\r\n      (data) => {\r\n        this.comparisonDataToDisplay = data;\r\n      }\r\n    );\r\n    // if the container already contains an editor, remove it\r\n    const codeEditorContainer = document.getElementById('code-editor-container');\r\n    if (codeEditorContainer.firstChild) {\r\n      codeEditorContainer.removeChild(codeEditorContainer.firstChild);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get grid data to send to C# application\r\n   */\r\n  getGridData(): string {\r\n    this.appLog.add('Grid: Sending data to C#', 'info');\r\n    return JSON.stringify(this.comparisonDataToDisplay);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/grid/grid.component.ts","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { fromPromise } from 'rxjs/observable/fromPromise';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { AppLogService } from '../app-log/app-log.service';\r\nimport { WindowReferenceService } from './window-reference.service';\r\n\r\nimport { DatabaseSourceData } from '../shared/mocks/data-list';\r\nimport { ComparisonTree } from '../shared/model/comparison-tree';\r\n\r\n@Injectable()\r\nexport class GridDataService {\r\n\r\n  private _window: Window;\r\n  private databaseObjects: ComparisonTree[];\r\n\r\n  constructor(private logService: AppLogService, private windowRef: WindowReferenceService) {\r\n    this._window = this.windowRef.nativeWindow;\r\n  }\r\n\r\n  /**\r\n   * Get the data from the C# application\r\n   */\r\n  getGridDataToDisplay(): Observable<ComparisonTree[]> {\r\n    this.logService.add('Grid data service: Getting data from C#', 'info');\r\n    return fromPromise(this._window['comparisonJSInteraction']\r\n      .getComparisonList())\r\n      .pipe(map((data: string) => JSON.parse(data)));\r\n  }\r\n\r\n  /**\r\n   * Send the change done to the C# application\r\n   * @param id - Id of the node for which action was changed\r\n   * @param newAction - The updated action\r\n   * @param oldAction - The old action that was selected\r\n   */\r\n  sendChange(id: number, newAction: string, oldAction: string): void {\r\n    this.logService.add('Grid data service: Updating C# object on change in element', 'info');\r\n    this._window['comparisonJSInteraction'].changeOccurred(id, newAction, oldAction);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/grid-data.service.ts","import { Injectable } from '@angular/core';\r\n\r\n/**\r\n * Return the instance of window\r\n */\r\nfunction _window(): Window {\r\n    return window;\r\n}\r\n\r\n@Injectable()\r\nexport class WindowReferenceService {\r\n\r\n    get nativeWindow(): Window {\r\n        return _window();\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/window-reference.service.ts","export class ComparisonTree {\r\n\r\n  // Id of the object\r\n  Id: number;\r\n\r\n  // Node type of the object\r\n  // Example: Data Source, Table, Relationship, KPI\r\n  NodeType: string;\r\n\r\n  // Id of this object's parent\r\n  ParentId: number;\r\n\r\n  // Name of this object in source schema\r\n  SourceName: string;\r\n\r\n  // Name of this object in target schema\r\n  TargetName: string;\r\n\r\n  // Name of this object in source schema\r\n  SourceInternalName: string;\r\n\r\n  // Name of this object in target schema\r\n  TargetInternalName: string;\r\n\r\n  // Indentation level of the object\r\n  Level: number;\r\n\r\n  // Status of the object compared to the source and target\r\n  Status: string;\r\n\r\n  // Current action to be performed for this object\r\n  MergeAction: string;\r\n\r\n  // Code at source\r\n  SourceObjectDefinition: string;\r\n\r\n  // Code at target\r\n  TargetObjectDefinition: string;\r\n\r\n  // Ids of the children nodes\r\n  // Will be removed once all manipulation with child nodes is isolated to Comparison object\r\n  ChildNodes: number[];\r\n\r\n  // Actions that can be performed for this object\r\n  AvailableActions: string[];\r\n\r\n  // To maintain if the object is to be shown on UI or not\r\n  ShowNode: boolean;\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/model/comparison-tree.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n    enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n    .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}